/* Positioning & Sizing Function Collection
 * 
 * Oct 19: Enhanced dimen, if only one parameter, make it square size
 */

@mixin position($top: null, $bottom: null, $left: null, $right: null, $position: absolute) {
    position : $position;

    @if ($top)      { top       : $top; }
    @if ($bottom)   { bottom    : $bottom; }
    @if ($left)     { left      : $left; }
    @if ($right)    { right     : $right; }
}

@mixin fixed($top: null, $bottom: null, $left: null, $right: null) {
    @include position($top, $bottom, $left, $right, fixed);
}

@mixin dimen($width: null, $height: null) {
    @if ($width)    { 
        width  : $width; 
        height : if($height == null, $width, $height);     
    }
}

@mixin margin-x($margin-sizes: 0) {
    @if (length($margin-sizes) == 1) {
        margin-left  : $margin-sizes;
        margin-right : $margin-sizes;
    } @else {
        margin-left  : nth($margin-sizes, 1);
        margin-right : nth($margin-sizes, 2);
    }
}

@mixin margin-y($margin-sizes: 0) {
    @if (length($margin-sizes) == 1) {
        margin-top    : $margin-sizes;
        margin-bottom : $margin-sizes;
    } @else {
        margin-top    : nth($margin-sizes, 1);
        margin-bottom : nth($margin-sizes, 2);
    }
}

@mixin padding-x($padding-sizes: 0) {
    @if (length($padding-sizes) == 1) {
        padding-left  : $padding-sizes;
        padding-right : $padding-sizes;
    } @else {
        padding-left  : nth($padding-sizes, 1);
        padding-right : nth($padding-sizes, 2);
    }
}

@mixin padding-y($padding-sizes: 0) {
    @if (length($padding-sizes) == 1) {
        padding-top    : $padding-sizes;
        padding-bottom : $padding-sizes;
    } @else {
        padding-top    : nth($padding-sizes, 1);
        padding-bottom : nth($padding-sizes, 2);
    }
}
