// @use "sass:color";

.btn {
    $class-ns : #{$namespace}-btn;

    padding: 5px 10px;
    min-height: 30px;
    min-width: 30px;

    @each $btn-name, $btn-attrs in $btn-types {

        @if ($btn-name == "default-style") {

            // Default Button Style
            @each $attr-name, $attr-val in $btn-attrs {
                @if ($attr-name == "space-between") {
                    & + .btn {
                        margin-left: $attr-val; //map-get($btn-attrs, space-between);
                    }
                } @else {
                    #{$attr-name}: #{$attr-val};
                }
            }

        } @else {

            // Custom Button class
            &.#{$class-ns}-#{$btn-name} {

                // Filling default style if missing
                $refined-btn-attrs: $btn-attrs;
                $default-bg-color: theme-color( nth( map-get($refined-btn-attrs, 'normal'), 1) );

                @if (map-has-key($btn-attrs, "hover") == false) {
                    $hoverColor: lighten($default-bg-color, 5%);
                    $refined-btn-attrs: map-merge(  $refined-btn-attrs, 
                                                    (hover: ($hoverColor, $hoverColor)) );
                    // @debug $refined-btn-attrs;
                }
                @if (map-has-key($btn-attrs, "active") == false) {
                    $activeColor: darken($default-bg-color, 5%);
                    $refined-btn-attrs: map-merge(  $refined-btn-attrs, 
                                                    (active: ($activeColor, $activeColor)) );
                }
                // End: Filling default style if missing

                // Produce actual style
                @each $attr-name, $attr-val in $refined-btn-attrs {
                    @if ($attr-name == "typeface") {
                        @include typeface($attr-val);
                    } @else if ($attr-name == "normal") {
                        &:not(:disabled):not(.disabled) {
                            @include color-attrs($attr-val);
                        }
                    } @else if ($attr-name == "hover") {
                        &:hover {
                            &:not(:disabled):not(.disabled) {
                                // @debug $attr-val;
                                @include color-attrs($attr-val);
                            }
                        }
                    } @else if ($attr-name == "active") {
                        //&:focus,
                        &:active {
                            &:not(:disabled):not(.disabled) {
                                // @debug $attr-val;
                                @include color-attrs($attr-val);
                            }
                        }
                    // } @else {
                        // #{$attr-name}: #{$attr-val};
                    } @else if ($attr-name == "disabled") {
                        &:disabled,
                        &.disabled {
                            // @debug $attr-val;
                            @include color-attrs($attr-val);
                        }
                    }

                } // End of Attributes loop
                // End: Produce actual style

            }
    
        }

    }
}